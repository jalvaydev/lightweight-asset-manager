scalar Time

type Asset {
  id: ID!
  name: String!
  note: String!
  serial: String!
  model: String!
  status: String!
  dateOfPurchase: Time!
  cost: Int!
}

type Model {
  id: ID!
  name: String!
  manufacturer: String!
  modelno: String!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  department: String!
  mobilePhone: String
  secondEmail: String
  title: String
  login: String
  email: String!
  userType: String
}

type Query {
  asset(input: String!): Asset!
  assets: [Asset!]!
  countAssets: String!
  assetByName(input: String!): String!
  feed(skip: Int!, limit: Int!): [Asset!]!
  user(id: String!): User!
  users: [User!]!
  models: [Model!]!
}

input NewAsset {
  name: String!
  note: String!
  serial: String!
  model: String!
  status: String!
  dateOfPurchase: Time!
  cost: Int!
}

input UpdateAssetInput {
  id: String!
  field: String!
  value: String!
}

input NewModel {
  name: String!
  manufacturer: String!
  modelno: String!
}

input UpdateUserInput {
  id: String!
  field: String!
  value: String!
}

input NewUser {
  firstName: String!
  lastName: String!
  email: String!
  login: String!
  mobilePhone: String!
  title: String!
  department: String!
  password: String!
}

type Mutation {
  createAsset(input: NewAsset!): Asset!
  updateAsset(input: UpdateAssetInput!): Boolean!
  deleteAsset(input: String!): Boolean!
  createUser(input: NewUser!): Boolean!
  updateUser(input: UpdateUserInput!): User!
  createModel(input: NewModel!): Model!
}
