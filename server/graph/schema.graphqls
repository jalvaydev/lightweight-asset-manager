scalar Time

type Asset {
  id: ID!
  name: String!
  note: String!
  serial: String!
  model: String!
  status: String!
  dateOfPurchase: Time!
  cost: Int!
}

type Model {
  id: ID!
  name: String!
  manufacturer: String!
  modelno: String!
}

type User {
  id: ID!
  name: String!
  access: String!
}

type Query {
  assets: [Asset!]!
  countAssets: String!
  asset(input: String!): Asset!
  models: [Model!]!
  feed(skip: Int!, limit: Int!): [Asset!]!
}

input NewAsset {
  name: String!
  note: String!
  serial: String!
  model: String!
  status: String!
  dateOfPurchase: Time!
  cost: Int!
}

input NewModel {
  name: String!
  manufacturer: String!
  modelno: String!
}

type Mutation {
  createAsset(input: NewAsset!): Asset!
  createModel(input: NewModel!): Model!
}
